

Microchip MPLAB XC8 Assembler V2.35 build 20211206165544 
                                                                                               Sat Apr 09 16:36:17 2022

Microchip MPLAB XC8 C Compiler v2.35 (Free license) build 20211206165544 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataCOMMON,global,class=CODE,delta=2,noexec
     5                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     6                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	cinit,global,class=CODE,merge=1,delta=2
     8                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     9                           	psect	dataCOMMON,global,class=COMMON,space=1,delta=1,noexec
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
    11                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
    12                           	psect	inittext,global,class=CODE,delta=2
    13                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    14                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    15                           	psect	maintext,global,class=CODE,split=1,delta=2
    16                           	psect	text1,local,class=CODE,merge=1,delta=2
    17                           	psect	text2,local,class=CODE,merge=1,delta=2
    18                           	psect	text3,local,class=CODE,merge=1,delta=2
    19                           	psect	text4,local,class=CODE,merge=1,delta=2,group=1
    20                           	psect	text5,local,class=CODE,merge=1,delta=2,group=1
    21                           	psect	text6,local,class=CODE,merge=1,delta=2
    22                           	psect	intentry,global,class=CODE,delta=2
    23                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    24                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    25                           	dabs	1,0x7E,2
    26  0000                     
    27                           ; Version 2.40
    28                           ; Generated 17/11/2021 GMT
    29                           ; 
    30                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    31                           ; All rights reserved.
    32                           ; 
    33                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    34                           ; 
    35                           ; Redistribution and use in source and binary forms, with or without modification, are
    36                           ; permitted provided that the following conditions are met:
    37                           ; 
    38                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    39                           ;        conditions and the following disclaimer.
    40                           ; 
    41                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    42                           ;        of conditions and the following disclaimer in the documentation and/or other
    43                           ;        materials provided with the distribution. Publication is not required when
    44                           ;        this file is used in an embedded application.
    45                           ; 
    46                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    47                           ;        software without specific prior written permission.
    48                           ; 
    49                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    50                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    51                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    52                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    53                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    54                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    55                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    56                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    57                           ; 
    58                           ; 
    59                           ; Code-generator required, PIC16F887 Definitions
    60                           ; 
    61                           ; SFR Addresses
    62  0000                     	;# 
    63  0001                     	;# 
    64  0002                     	;# 
    65  0003                     	;# 
    66  0004                     	;# 
    67  0005                     	;# 
    68  0006                     	;# 
    69  0007                     	;# 
    70  0008                     	;# 
    71  0009                     	;# 
    72  000A                     	;# 
    73  000B                     	;# 
    74  000C                     	;# 
    75  000D                     	;# 
    76  000E                     	;# 
    77  000E                     	;# 
    78  000F                     	;# 
    79  0010                     	;# 
    80  0011                     	;# 
    81  0012                     	;# 
    82  0013                     	;# 
    83  0014                     	;# 
    84  0015                     	;# 
    85  0015                     	;# 
    86  0016                     	;# 
    87  0017                     	;# 
    88  0018                     	;# 
    89  0019                     	;# 
    90  001A                     	;# 
    91  001B                     	;# 
    92  001B                     	;# 
    93  001C                     	;# 
    94  001D                     	;# 
    95  001E                     	;# 
    96  001F                     	;# 
    97  0081                     	;# 
    98  0085                     	;# 
    99  0086                     	;# 
   100  0087                     	;# 
   101  0088                     	;# 
   102  0089                     	;# 
   103  008C                     	;# 
   104  008D                     	;# 
   105  008E                     	;# 
   106  008F                     	;# 
   107  0090                     	;# 
   108  0091                     	;# 
   109  0092                     	;# 
   110  0093                     	;# 
   111  0093                     	;# 
   112  0093                     	;# 
   113  0094                     	;# 
   114  0095                     	;# 
   115  0096                     	;# 
   116  0097                     	;# 
   117  0098                     	;# 
   118  0099                     	;# 
   119  009A                     	;# 
   120  009B                     	;# 
   121  009C                     	;# 
   122  009D                     	;# 
   123  009E                     	;# 
   124  009F                     	;# 
   125  0105                     	;# 
   126  0107                     	;# 
   127  0108                     	;# 
   128  0109                     	;# 
   129  010C                     	;# 
   130  010C                     	;# 
   131  010D                     	;# 
   132  010E                     	;# 
   133  010F                     	;# 
   134  0185                     	;# 
   135  0187                     	;# 
   136  0188                     	;# 
   137  0189                     	;# 
   138  018C                     	;# 
   139  018D                     	;# 
   140  0000                     	;# 
   141  0001                     	;# 
   142  0002                     	;# 
   143  0003                     	;# 
   144  0004                     	;# 
   145  0005                     	;# 
   146  0006                     	;# 
   147  0007                     	;# 
   148  0008                     	;# 
   149  0009                     	;# 
   150  000A                     	;# 
   151  000B                     	;# 
   152  000C                     	;# 
   153  000D                     	;# 
   154  000E                     	;# 
   155  000E                     	;# 
   156  000F                     	;# 
   157  0010                     	;# 
   158  0011                     	;# 
   159  0012                     	;# 
   160  0013                     	;# 
   161  0014                     	;# 
   162  0015                     	;# 
   163  0015                     	;# 
   164  0016                     	;# 
   165  0017                     	;# 
   166  0018                     	;# 
   167  0019                     	;# 
   168  001A                     	;# 
   169  001B                     	;# 
   170  001B                     	;# 
   171  001C                     	;# 
   172  001D                     	;# 
   173  001E                     	;# 
   174  001F                     	;# 
   175  0081                     	;# 
   176  0085                     	;# 
   177  0086                     	;# 
   178  0087                     	;# 
   179  0088                     	;# 
   180  0089                     	;# 
   181  008C                     	;# 
   182  008D                     	;# 
   183  008E                     	;# 
   184  008F                     	;# 
   185  0090                     	;# 
   186  0091                     	;# 
   187  0092                     	;# 
   188  0093                     	;# 
   189  0093                     	;# 
   190  0093                     	;# 
   191  0094                     	;# 
   192  0095                     	;# 
   193  0096                     	;# 
   194  0097                     	;# 
   195  0098                     	;# 
   196  0099                     	;# 
   197  009A                     	;# 
   198  009B                     	;# 
   199  009C                     	;# 
   200  009D                     	;# 
   201  009E                     	;# 
   202  009F                     	;# 
   203  0105                     	;# 
   204  0107                     	;# 
   205  0108                     	;# 
   206  0109                     	;# 
   207  010C                     	;# 
   208  010C                     	;# 
   209  010D                     	;# 
   210  010E                     	;# 
   211  010F                     	;# 
   212  0185                     	;# 
   213  0187                     	;# 
   214  0188                     	;# 
   215  0189                     	;# 
   216  018C                     	;# 
   217  018D                     	;# 
   218                           
   219                           	psect	idataCOMMON
   220  024C                     __pidataCOMMON:
   221                           
   222                           ;initializer for _D
   223  024C  3401               	retlw	1
   224                           
   225                           ;initializer for _C
   226  024D  3401               	retlw	1
   227                           
   228                           ;initializer for _B
   229  024E  3401               	retlw	1
   230                           
   231                           ;initializer for _A
   232  024F  3401               	retlw	1
   233                           
   234                           	psect	idataBANK0
   235  0242                     __pidataBANK0:
   236                           
   237                           ;initializer for _index
   238  0242  343F               	retlw	63
   239  0243  3406               	retlw	6
   240  0244  345B               	retlw	91
   241  0245  344F               	retlw	79
   242  0246  3466               	retlw	102
   243  0247  346D               	retlw	109
   244  0248  347D               	retlw	125
   245  0249  3407               	retlw	7
   246  024A  347F               	retlw	127
   247  024B  346F               	retlw	111
   248                           
   249                           	psect	nvBANK0
   250  0035                     __pnvBANK0:
   251  0035                     _ones:
   252  0035                     	ds	2
   253  0037                     _tens:
   254  0037                     	ds	2
   255  0039                     _huns:
   256  0039                     	ds	2
   257  003B                     _mod:
   258  003B                     	ds	1
   259  0008                     _PORTDbits	set	8
   260  0006                     _PORTBbits	set	6
   261  0001                     _TMR0	set	1
   262  000B                     _INTCONbits	set	11
   263  0008                     _PORTD	set	8
   264  0007                     _PORTC	set	7
   265  0005                     _PORTA	set	5
   266  005A                     _T0IF	set	90
   267  008F                     _OSCCONbits	set	143
   268  0096                     _IOCBbits	set	150
   269  0095                     _WPUBbits	set	149
   270  0081                     _OPTION_REGbits	set	129
   271  0086                     _TRISBbits	set	134
   272  0088                     _TRISD	set	136
   273  0087                     _TRISC	set	135
   274  0085                     _TRISA	set	133
   275  0189                     _ANSELH	set	393
   276  0188                     _ANSEL	set	392
   277                           
   278                           	psect	cinit
   279  0011                     start_initialization:	
   280                           ; #config settings
   281                           
   282  0011                     __initialization:
   283                           
   284                           ; Initialize objects allocated to BANK0
   285  0011  1383               	bcf	3,7	;select IRP bank0
   286  0012  3035               	movlw	low (__pdataBANK0+10)
   287  0013  00FD               	movwf	btemp+-1
   288  0014  3002               	movlw	high __pidataBANK0
   289  0015  00FE               	movwf	btemp
   290  0016  3042               	movlw	low __pidataBANK0
   291  0017  00FF               	movwf	btemp+1
   292  0018  302B               	movlw	low __pdataBANK0
   293  0019  0084               	movwf	4
   294  001A  120A  118A  2226  120A  118A  	fcall	init_ram0
   295                           
   296                           ; Initialize objects allocated to COMMON
   297  001F  120A  118A  224C  120A  118A  	fcall	__pidataCOMMON	;fetch initializer
   298  0024  00F5               	movwf	__pdataCOMMON& (0+127)
   299  0025  120A  118A  224D  120A  118A  	fcall	__pidataCOMMON+1	;fetch initializer
   300  002A  00F6               	movwf	(__pdataCOMMON+1)& (0+127)
   301  002B  120A  118A  224E  120A  118A  	fcall	__pidataCOMMON+2	;fetch initializer
   302  0030  00F7               	movwf	(__pdataCOMMON+2)& (0+127)
   303  0031  120A  118A  224F  120A  118A  	fcall	__pidataCOMMON+3	;fetch initializer
   304  0036  00F8               	movwf	(__pdataCOMMON+3)& (0+127)
   305                           
   306                           ; Clear objects allocated to BANK0
   307  0037  01BC               	clrf	__pbssBANK0& (0+127)
   308  0038  01BD               	clrf	(__pbssBANK0+1)& (0+127)
   309                           
   310                           ; Clear objects allocated to COMMON
   311  0039  01F9               	clrf	__pbssCOMMON& (0+127)
   312  003A                     end_of_initialization:	
   313                           ;End of C runtime variable initialization code
   314                           
   315  003A                     __end_of__initialization:
   316  003A  0183               	clrf	3
   317  003B  120A  118A  2A0B   	ljmp	_main	;jump to C main() function
   318                           
   319                           	psect	bssCOMMON
   320  0079                     __pbssCOMMON:
   321  0079                     _contador1:
   322  0079                     	ds	1
   323                           
   324                           	psect	dataCOMMON
   325  0075                     __pdataCOMMON:
   326  0075                     _D:
   327  0075                     	ds	1
   328  0076                     _C:
   329  0076                     	ds	1
   330  0077                     _B:
   331  0077                     	ds	1
   332  0078                     _A:
   333  0078                     	ds	1
   334                           
   335                           	psect	bssBANK0
   336  003C                     __pbssBANK0:
   337  003C                     _disp_flag:
   338  003C                     	ds	2
   339                           
   340                           	psect	dataBANK0
   341  002B                     __pdataBANK0:
   342  002B                     _index:
   343  002B                     	ds	10
   344                           
   345                           	psect	inittext
   346  0222                     init_fetch0:	
   347                           ;	Called with low address in FSR and high address in W
   348                           
   349  0222  087E               	movf	btemp,w
   350  0223  008A               	movwf	10
   351  0224  087F               	movf	btemp+1,w
   352  0225  0082               	movwf	2
   353  0226                     init_ram0:	
   354                           ;Called with:
   355                           ;	high address of idata address in btemp 
   356                           ;	low address of idata address in btemp+1 
   357                           ;	low address of data in FSR
   358                           ;	high address + 1 of data in btemp-1
   359                           
   360  0226  120A  118A  2222  120A  118A  	fcall	init_fetch0
   361  022B  0080               	movwf	0
   362  022C  0A84               	incf	4,f
   363  022D  0804               	movf	4,w
   364  022E  067D               	xorwf	btemp+-1,w
   365  022F  1903               	btfsc	3,2
   366  0230  3400               	retlw	0
   367  0231  0AFF               	incf	btemp+1,f
   368  0232  1903               	btfsc	3,2
   369  0233  0AFE               	incf	btemp,f
   370  0234  2A26               	goto	init_ram0
   371                           
   372                           	psect	cstackCOMMON
   373  0070                     __pcstackCOMMON:
   374  0070                     ?_setup:
   375  0070                     ?_tmr0_setup:	
   376                           ; 1 bytes @ 0x0
   377                           
   378  0070                     ?_isr:	
   379                           ; 1 bytes @ 0x0
   380                           
   381  0070                     ??_isr:	
   382                           ; 1 bytes @ 0x0
   383                           
   384  0070                     ?_main:	
   385                           ; 1 bytes @ 0x0
   386                           
   387  0070                     ?_digits:	
   388                           ; 1 bytes @ 0x0
   389                           
   390                           
   391                           ; 2 bytes @ 0x0
   392  0070                     	ds	4
   393  0074                     ??_setup:
   394  0074                     ??_tmr0_setup:	
   395                           ; 1 bytes @ 0x4
   396                           
   397  0074                     ??___awdiv:	
   398                           ; 1 bytes @ 0x4
   399                           
   400  0074                     ??___awmod:	
   401                           ; 1 bytes @ 0x4
   402                           
   403                           
   404                           ; 1 bytes @ 0x4
   405  0074                     	ds	1
   406  0075                     ??_main:
   407                           
   408                           	psect	cstackBANK0
   409  0020                     __pcstackBANK0:	
   410                           ; 1 bytes @ 0x5
   411                           
   412  0020                     ?___awdiv:
   413  0020                     ?___awmod:	
   414                           ; 2 bytes @ 0x0
   415                           
   416  0020                     ___awdiv@divisor:	
   417                           ; 2 bytes @ 0x0
   418                           
   419  0020                     ___awmod@divisor:	
   420                           ; 2 bytes @ 0x0
   421                           
   422                           
   423                           ; 2 bytes @ 0x0
   424  0020                     	ds	2
   425  0022                     ___awdiv@dividend:
   426  0022                     ___awmod@dividend:	
   427                           ; 2 bytes @ 0x2
   428                           
   429                           
   430                           ; 2 bytes @ 0x2
   431  0022                     	ds	2
   432  0024                     ___awdiv@counter:
   433  0024                     ___awmod@counter:	
   434                           ; 1 bytes @ 0x4
   435                           
   436                           
   437                           ; 1 bytes @ 0x4
   438  0024                     	ds	1
   439  0025                     ___awdiv@sign:
   440  0025                     ___awmod@sign:	
   441                           ; 1 bytes @ 0x5
   442                           
   443                           
   444                           ; 1 bytes @ 0x5
   445  0025                     	ds	1
   446  0026                     ___awdiv@quotient:
   447                           
   448                           ; 2 bytes @ 0x6
   449  0026                     	ds	2
   450  0028                     ??_digits:
   451                           
   452                           ; 1 bytes @ 0x8
   453  0028                     	ds	3
   454                           
   455                           	psect	maintext
   456  020B                     __pmaintext:	
   457 ;;
   458 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   459 ;;
   460 ;; *************** function _main *****************
   461 ;; Defined at:
   462 ;;		line 178 in file "lab07_main-20168.c"
   463 ;; Parameters:    Size  Location     Type
   464 ;;		None
   465 ;; Auto vars:     Size  Location     Type
   466 ;;		None
   467 ;; Return value:  Size  Location     Type
   468 ;;                  1    wreg      void 
   469 ;; Registers used:
   470 ;;		wreg, status,2, status,0, pclath, cstack
   471 ;; Tracked objects:
   472 ;;		On entry : B00/0
   473 ;;		On exit  : 0/0
   474 ;;		Unchanged: 0/0
   475 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   476 ;;      Params:         0       0       0       0       0
   477 ;;      Locals:         0       0       0       0       0
   478 ;;      Temps:          0       0       0       0       0
   479 ;;      Totals:         0       0       0       0       0
   480 ;;Total ram usage:        0 bytes
   481 ;; Hardware stack levels required when called: 3
   482 ;; This function calls:
   483 ;;		_digits
   484 ;;		_setup
   485 ;;		_tmr0_setup
   486 ;; This function is called by:
   487 ;;		Startup code after reset
   488 ;; This function uses a non-reentrant model
   489 ;;
   490                           
   491  020B                     _main:	
   492                           ;psect for function _main
   493                           
   494  020B                     l1115:	
   495                           ;incstack = 0
   496                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   497                           
   498                           
   499                           ;lab07_main-20168.c: 180:     setup();
   500  020B  120A  118A  21E1  120A  118A  	fcall	_setup
   501                           
   502                           ;lab07_main-20168.c: 181:     tmr0_setup();
   503  0210  120A  118A  2235  120A  118A  	fcall	_tmr0_setup
   504  0215                     l1117:
   505                           
   506                           ;lab07_main-20168.c: 185:         PORTA = contador1;
   507  0215  0879               	movf	_contador1,w
   508  0216  1283               	bcf	3,5	;RP0=0, select bank0
   509  0217  1303               	bcf	3,6	;RP1=0, select bank0
   510  0218  0085               	movwf	5	;volatile
   511  0219                     l1119:
   512                           
   513                           ;lab07_main-20168.c: 186:         digits();
   514  0219  120A  118A  212B  120A  118A  	fcall	_digits
   515  021E  2A15               	goto	l1117
   516  021F  120A  118A  280E   	ljmp	start
   517  0222                     __end_of_main:
   518                           
   519                           	psect	text1
   520  0235                     __ptext1:	
   521 ;; *************** function _tmr0_setup *****************
   522 ;; Defined at:
   523 ;;		line 106 in file "lab07_main-20168.c"
   524 ;; Parameters:    Size  Location     Type
   525 ;;		None
   526 ;; Auto vars:     Size  Location     Type
   527 ;;		None
   528 ;; Return value:  Size  Location     Type
   529 ;;                  1    wreg      void 
   530 ;; Registers used:
   531 ;;		wreg
   532 ;; Tracked objects:
   533 ;;		On entry : 0/0
   534 ;;		On exit  : 0/0
   535 ;;		Unchanged: 0/0
   536 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   537 ;;      Params:         0       0       0       0       0
   538 ;;      Locals:         0       0       0       0       0
   539 ;;      Temps:          0       0       0       0       0
   540 ;;      Totals:         0       0       0       0       0
   541 ;;Total ram usage:        0 bytes
   542 ;; Hardware stack levels used: 1
   543 ;; Hardware stack levels required when called: 1
   544 ;; This function calls:
   545 ;;		Nothing
   546 ;; This function is called by:
   547 ;;		_main
   548 ;; This function uses a non-reentrant model
   549 ;;
   550                           
   551  0235                     _tmr0_setup:	
   552                           ;psect for function _tmr0_setup
   553                           
   554  0235                     l799:	
   555                           ;incstack = 0
   556                           ; Regs used in _tmr0_setup: [wreg]
   557                           
   558                           
   559                           ;lab07_main-20168.c: 107:     OPTION_REGbits.T0CS = 0;
   560  0235  1683               	bsf	3,5	;RP0=1, select bank1
   561  0236  1303               	bcf	3,6	;RP1=0, select bank1
   562  0237  1281               	bcf	1,5	;volatile
   563                           
   564                           ;lab07_main-20168.c: 108:     OPTION_REGbits.PSA = 0;
   565  0238  1181               	bcf	1,3	;volatile
   566                           
   567                           ;lab07_main-20168.c: 109:     OPTION_REGbits.PS0 = 1;
   568  0239  1401               	bsf	1,0	;volatile
   569                           
   570                           ;lab07_main-20168.c: 110:     OPTION_REGbits.PS1 = 1;
   571  023A  1481               	bsf	1,1	;volatile
   572                           
   573                           ;lab07_main-20168.c: 111:     OPTION_REGbits.PS2 = 1;
   574  023B  1501               	bsf	1,2	;volatile
   575                           
   576                           ;lab07_main-20168.c: 113:     INTCONbits.T0IF = 0;
   577  023C  110B               	bcf	11,2	;volatile
   578  023D                     l801:
   579                           
   580                           ;lab07_main-20168.c: 114:     TMR0 = 248;
   581  023D  30F8               	movlw	248
   582  023E  1283               	bcf	3,5	;RP0=0, select bank0
   583  023F  1303               	bcf	3,6	;RP1=0, select bank0
   584  0240  0081               	movwf	1	;volatile
   585  0241                     l64:
   586  0241  0008               	return
   587  0242                     __end_of_tmr0_setup:
   588                           
   589                           	psect	text2
   590  01E1                     __ptext2:	
   591 ;; *************** function _setup *****************
   592 ;; Defined at:
   593 ;;		line 71 in file "lab07_main-20168.c"
   594 ;; Parameters:    Size  Location     Type
   595 ;;		None
   596 ;; Auto vars:     Size  Location     Type
   597 ;;		None
   598 ;; Return value:  Size  Location     Type
   599 ;;                  1    wreg      void 
   600 ;; Registers used:
   601 ;;		wreg, status,2, status,0
   602 ;; Tracked objects:
   603 ;;		On entry : 0/0
   604 ;;		On exit  : 0/0
   605 ;;		Unchanged: 0/0
   606 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   607 ;;      Params:         0       0       0       0       0
   608 ;;      Locals:         0       0       0       0       0
   609 ;;      Temps:          0       0       0       0       0
   610 ;;      Totals:         0       0       0       0       0
   611 ;;Total ram usage:        0 bytes
   612 ;; Hardware stack levels used: 1
   613 ;; Hardware stack levels required when called: 1
   614 ;; This function calls:
   615 ;;		Nothing
   616 ;; This function is called by:
   617 ;;		_main
   618 ;; This function uses a non-reentrant model
   619 ;;
   620                           
   621  01E1                     _setup:	
   622                           ;psect for function _setup
   623                           
   624  01E1                     l767:	
   625                           ;incstack = 0
   626                           ; Regs used in _setup: [wreg+status,2+status,0]
   627                           
   628                           
   629                           ;lab07_main-20168.c: 73:     ANSEL = 0;
   630  01E1  1683               	bsf	3,5	;RP0=1, select bank3
   631  01E2  1703               	bsf	3,6	;RP1=1, select bank3
   632  01E3  0188               	clrf	8	;volatile
   633                           
   634                           ;lab07_main-20168.c: 74:     ANSELH = 0;
   635  01E4  0189               	clrf	9	;volatile
   636                           
   637                           ;lab07_main-20168.c: 76:     TRISA = 0;
   638  01E5  1683               	bsf	3,5	;RP0=1, select bank1
   639  01E6  1303               	bcf	3,6	;RP1=0, select bank1
   640  01E7  0185               	clrf	5	;volatile
   641                           
   642                           ;lab07_main-20168.c: 77:     PORTA = 0;
   643  01E8  1283               	bcf	3,5	;RP0=0, select bank0
   644  01E9  1303               	bcf	3,6	;RP1=0, select bank0
   645  01EA  0185               	clrf	5	;volatile
   646                           
   647                           ;lab07_main-20168.c: 78:     TRISC = 0;
   648  01EB  1683               	bsf	3,5	;RP0=1, select bank1
   649  01EC  1303               	bcf	3,6	;RP1=0, select bank1
   650  01ED  0187               	clrf	7	;volatile
   651                           
   652                           ;lab07_main-20168.c: 79:     PORTC = 0;
   653  01EE  1283               	bcf	3,5	;RP0=0, select bank0
   654  01EF  1303               	bcf	3,6	;RP1=0, select bank0
   655  01F0  0187               	clrf	7	;volatile
   656                           
   657                           ;lab07_main-20168.c: 80:     TRISD = 0;
   658  01F1  1683               	bsf	3,5	;RP0=1, select bank1
   659  01F2  1303               	bcf	3,6	;RP1=0, select bank1
   660  01F3  0188               	clrf	8	;volatile
   661                           
   662                           ;lab07_main-20168.c: 81:     PORTD = 0;
   663  01F4  1283               	bcf	3,5	;RP0=0, select bank0
   664  01F5  1303               	bcf	3,6	;RP1=0, select bank0
   665  01F6  0188               	clrf	8	;volatile
   666  01F7                     l769:
   667                           
   668                           ;lab07_main-20168.c: 84:     TRISBbits.TRISB0 = 1;
   669  01F7  1683               	bsf	3,5	;RP0=1, select bank1
   670  01F8  1303               	bcf	3,6	;RP1=0, select bank1
   671  01F9  1406               	bsf	6,0	;volatile
   672  01FA                     l771:
   673                           
   674                           ;lab07_main-20168.c: 85:     TRISBbits.TRISB1 = 1;
   675  01FA  1486               	bsf	6,1	;volatile
   676  01FB                     l773:
   677                           
   678                           ;lab07_main-20168.c: 86:     OPTION_REGbits.nRBPU = 0;
   679  01FB  1381               	bcf	1,7	;volatile
   680  01FC                     l775:
   681                           
   682                           ;lab07_main-20168.c: 87:     WPUBbits.WPUB0 = 1;
   683  01FC  1415               	bsf	21,0	;volatile
   684  01FD                     l777:
   685                           
   686                           ;lab07_main-20168.c: 88:     WPUBbits.WPUB1 = 1;
   687  01FD  1495               	bsf	21,1	;volatile
   688  01FE                     l779:
   689                           
   690                           ;lab07_main-20168.c: 91:     INTCONbits.GIE = 1;
   691  01FE  178B               	bsf	11,7	;volatile
   692  01FF                     l781:
   693                           
   694                           ;lab07_main-20168.c: 92:     INTCONbits.RBIE = 1;
   695  01FF  158B               	bsf	11,3	;volatile
   696  0200                     l783:
   697                           
   698                           ;lab07_main-20168.c: 93:     INTCONbits.T0IE = 1;
   699  0200  168B               	bsf	11,5	;volatile
   700  0201                     l785:
   701                           
   702                           ;lab07_main-20168.c: 94:     IOCBbits.IOCB0 = 1;
   703  0201  1416               	bsf	22,0	;volatile
   704  0202                     l787:
   705                           
   706                           ;lab07_main-20168.c: 95:     IOCBbits.IOCB1 = 1;
   707  0202  1496               	bsf	22,1	;volatile
   708  0203                     l789:
   709                           
   710                           ;lab07_main-20168.c: 96:     INTCONbits.RBIF = 0;
   711  0203  100B               	bcf	11,0	;volatile
   712  0204                     l791:
   713                           
   714                           ;lab07_main-20168.c: 97:     INTCONbits.T0IF = 0;
   715  0204  110B               	bcf	11,2	;volatile
   716  0205                     l793:
   717                           
   718                           ;lab07_main-20168.c: 100:     OSCCONbits.IRCF = 0b0110;
   719  0205  080F               	movf	15,w	;volatile
   720  0206  398F               	andlw	-113
   721  0207  3860               	iorlw	96
   722  0208  008F               	movwf	15	;volatile
   723  0209                     l795:
   724                           
   725                           ;lab07_main-20168.c: 101:     OSCCONbits.SCS = 1;
   726  0209  140F               	bsf	15,0	;volatile
   727  020A                     l61:
   728  020A  0008               	return
   729  020B                     __end_of_setup:
   730                           
   731                           	psect	text3
   732  012B                     __ptext3:	
   733 ;; *************** function _digits *****************
   734 ;; Defined at:
   735 ;;		line 118 in file "lab07_main-20168.c"
   736 ;; Parameters:    Size  Location     Type
   737 ;;		None
   738 ;; Auto vars:     Size  Location     Type
   739 ;;		None
   740 ;; Return value:  Size  Location     Type
   741 ;;                  2   66[None  ] int 
   742 ;; Registers used:
   743 ;;		wreg, status,2, status,0, pclath, cstack
   744 ;; Tracked objects:
   745 ;;		On entry : 0/0
   746 ;;		On exit  : 0/0
   747 ;;		Unchanged: 0/0
   748 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   749 ;;      Params:         0       0       0       0       0
   750 ;;      Locals:         0       0       0       0       0
   751 ;;      Temps:          0       3       0       0       0
   752 ;;      Totals:         0       3       0       0       0
   753 ;;Total ram usage:        3 bytes
   754 ;; Hardware stack levels used: 1
   755 ;; Hardware stack levels required when called: 2
   756 ;; This function calls:
   757 ;;		___awdiv
   758 ;;		___awmod
   759 ;; This function is called by:
   760 ;;		_main
   761 ;; This function uses a non-reentrant model
   762 ;;
   763                           
   764  012B                     _digits:	
   765                           ;psect for function _digits
   766                           
   767  012B                     l1113:	
   768                           ;incstack = 0
   769                           ; Regs used in _digits: [wreg+status,2+status,0+pclath+cstack]
   770                           
   771                           
   772                           ;lab07_main-20168.c: 119:     mod = contador1%100;
   773  012B  3064               	movlw	100
   774  012C  1283               	bcf	3,5	;RP0=0, select bank0
   775  012D  1303               	bcf	3,6	;RP1=0, select bank0
   776  012E  00A0               	movwf	___awmod@divisor
   777  012F  3000               	movlw	0
   778  0130  00A1               	movwf	___awmod@divisor+1
   779  0131  0879               	movf	_contador1,w
   780  0132  00A8               	movwf	??_digits
   781  0133  01A9               	clrf	??_digits+1
   782  0134  0828               	movf	??_digits,w
   783  0135  00A2               	movwf	___awmod@dividend
   784  0136  0829               	movf	??_digits+1,w
   785  0137  00A3               	movwf	___awmod@dividend+1
   786  0138  120A  118A  2186  120A  118A  	fcall	___awmod
   787  013D  1283               	bcf	3,5	;RP0=0, select bank0
   788  013E  1303               	bcf	3,6	;RP1=0, select bank0
   789  013F  0820               	movf	?___awmod,w
   790  0140  00AA               	movwf	??_digits+2
   791  0141  082A               	movf	??_digits+2,w
   792  0142  00BB               	movwf	_mod
   793                           
   794                           ;lab07_main-20168.c: 120:     huns = contador1/100;
   795  0143  3064               	movlw	100
   796  0144  00A0               	movwf	___awdiv@divisor
   797  0145  3000               	movlw	0
   798  0146  00A1               	movwf	___awdiv@divisor+1
   799  0147  0879               	movf	_contador1,w
   800  0148  00A8               	movwf	??_digits
   801  0149  01A9               	clrf	??_digits+1
   802  014A  0828               	movf	??_digits,w
   803  014B  00A2               	movwf	___awdiv@dividend
   804  014C  0829               	movf	??_digits+1,w
   805  014D  00A3               	movwf	___awdiv@dividend+1
   806  014E  120A  118A  20C2  120A  118A  	fcall	___awdiv
   807  0153  1283               	bcf	3,5	;RP0=0, select bank0
   808  0154  1303               	bcf	3,6	;RP1=0, select bank0
   809  0155  0821               	movf	?___awdiv+1,w
   810  0156  00BA               	movwf	_huns+1
   811  0157  0820               	movf	?___awdiv,w
   812  0158  00B9               	movwf	_huns
   813                           
   814                           ;lab07_main-20168.c: 121:     tens = mod/10;
   815  0159  300A               	movlw	10
   816  015A  00A0               	movwf	___awdiv@divisor
   817  015B  3000               	movlw	0
   818  015C  00A1               	movwf	___awdiv@divisor+1
   819  015D  083B               	movf	_mod,w
   820  015E  00A8               	movwf	??_digits
   821  015F  01A9               	clrf	??_digits+1
   822  0160  0828               	movf	??_digits,w
   823  0161  00A2               	movwf	___awdiv@dividend
   824  0162  0829               	movf	??_digits+1,w
   825  0163  00A3               	movwf	___awdiv@dividend+1
   826  0164  120A  118A  20C2  120A  118A  	fcall	___awdiv
   827  0169  1283               	bcf	3,5	;RP0=0, select bank0
   828  016A  1303               	bcf	3,6	;RP1=0, select bank0
   829  016B  0821               	movf	?___awdiv+1,w
   830  016C  00B8               	movwf	_tens+1
   831  016D  0820               	movf	?___awdiv,w
   832  016E  00B7               	movwf	_tens
   833                           
   834                           ;lab07_main-20168.c: 122:     ones = mod%10;
   835  016F  300A               	movlw	10
   836  0170  00A0               	movwf	___awmod@divisor
   837  0171  3000               	movlw	0
   838  0172  00A1               	movwf	___awmod@divisor+1
   839  0173  083B               	movf	_mod,w
   840  0174  00A8               	movwf	??_digits
   841  0175  01A9               	clrf	??_digits+1
   842  0176  0828               	movf	??_digits,w
   843  0177  00A2               	movwf	___awmod@dividend
   844  0178  0829               	movf	??_digits+1,w
   845  0179  00A3               	movwf	___awmod@dividend+1
   846  017A  120A  118A  2186  120A  118A  	fcall	___awmod
   847  017F  1283               	bcf	3,5	;RP0=0, select bank0
   848  0180  1303               	bcf	3,6	;RP1=0, select bank0
   849  0181  0821               	movf	?___awmod+1,w
   850  0182  00B6               	movwf	_ones+1
   851  0183  0820               	movf	?___awmod,w
   852  0184  00B5               	movwf	_ones
   853  0185                     l67:
   854  0185  0008               	return
   855  0186                     __end_of_digits:
   856                           
   857                           	psect	text4
   858  0186                     __ptext4:	
   859 ;; *************** function ___awmod *****************
   860 ;; Defined at:
   861 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\awmod.c"
   862 ;; Parameters:    Size  Location     Type
   863 ;;  divisor         2    0[BANK0 ] int 
   864 ;;  dividend        2    2[BANK0 ] int 
   865 ;; Auto vars:     Size  Location     Type
   866 ;;  sign            1    5[BANK0 ] unsigned char 
   867 ;;  counter         1    4[BANK0 ] unsigned char 
   868 ;; Return value:  Size  Location     Type
   869 ;;                  2    0[BANK0 ] int 
   870 ;; Registers used:
   871 ;;		wreg, status,2, status,0
   872 ;; Tracked objects:
   873 ;;		On entry : 0/0
   874 ;;		On exit  : 0/0
   875 ;;		Unchanged: 0/0
   876 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   877 ;;      Params:         0       4       0       0       0
   878 ;;      Locals:         0       2       0       0       0
   879 ;;      Temps:          1       0       0       0       0
   880 ;;      Totals:         1       6       0       0       0
   881 ;;Total ram usage:        7 bytes
   882 ;; Hardware stack levels used: 1
   883 ;; Hardware stack levels required when called: 1
   884 ;; This function calls:
   885 ;;		Nothing
   886 ;; This function is called by:
   887 ;;		_digits
   888 ;; This function uses a non-reentrant model
   889 ;;
   890                           
   891  0186                     ___awmod:	
   892                           ;psect for function ___awmod
   893                           
   894  0186                     l1075:	
   895                           ;incstack = 0
   896                           ; Regs used in ___awmod: [wreg+status,2+status,0]
   897                           
   898  0186  1283               	bcf	3,5	;RP0=0, select bank0
   899  0187  1303               	bcf	3,6	;RP1=0, select bank0
   900  0188  01A5               	clrf	___awmod@sign
   901  0189                     l1077:
   902  0189  1FA3               	btfss	___awmod@dividend+1,7
   903  018A  298C               	goto	u671
   904  018B  298D               	goto	u670
   905  018C                     u671:
   906  018C  2994               	goto	l1083
   907  018D                     u670:
   908  018D                     l1079:
   909  018D  09A2               	comf	___awmod@dividend,f
   910  018E  09A3               	comf	___awmod@dividend+1,f
   911  018F  0AA2               	incf	___awmod@dividend,f
   912  0190  1903               	skipnz
   913  0191  0AA3               	incf	___awmod@dividend+1,f
   914  0192                     l1081:
   915  0192  01A5               	clrf	___awmod@sign
   916  0193  0AA5               	incf	___awmod@sign,f
   917  0194                     l1083:
   918  0194  1FA1               	btfss	___awmod@divisor+1,7
   919  0195  2997               	goto	u681
   920  0196  2998               	goto	u680
   921  0197                     u681:
   922  0197  299D               	goto	l1087
   923  0198                     u680:
   924  0198                     l1085:
   925  0198  09A0               	comf	___awmod@divisor,f
   926  0199  09A1               	comf	___awmod@divisor+1,f
   927  019A  0AA0               	incf	___awmod@divisor,f
   928  019B  1903               	skipnz
   929  019C  0AA1               	incf	___awmod@divisor+1,f
   930  019D                     l1087:
   931  019D  0820               	movf	___awmod@divisor,w
   932  019E  0421               	iorwf	___awmod@divisor+1,w
   933  019F  1903               	btfsc	3,2
   934  01A0  29A2               	goto	u691
   935  01A1  29A3               	goto	u690
   936  01A2                     u691:
   937  01A2  29D2               	goto	l1105
   938  01A3                     u690:
   939  01A3                     l1089:
   940  01A3  01A4               	clrf	___awmod@counter
   941  01A4  0AA4               	incf	___awmod@counter,f
   942  01A5  29B1               	goto	l1095
   943  01A6                     l1091:
   944  01A6  3001               	movlw	1
   945  01A7                     u705:
   946  01A7  1003               	clrc
   947  01A8  0DA0               	rlf	___awmod@divisor,f
   948  01A9  0DA1               	rlf	___awmod@divisor+1,f
   949  01AA  3EFF               	addlw	-1
   950  01AB  1D03               	skipz
   951  01AC  29A7               	goto	u705
   952  01AD                     l1093:
   953  01AD  3001               	movlw	1
   954  01AE  00F4               	movwf	??___awmod
   955  01AF  0874               	movf	??___awmod,w
   956  01B0  07A4               	addwf	___awmod@counter,f
   957  01B1                     l1095:
   958  01B1  1FA1               	btfss	___awmod@divisor+1,7
   959  01B2  29B4               	goto	u711
   960  01B3  29B5               	goto	u710
   961  01B4                     u711:
   962  01B4  29A6               	goto	l1091
   963  01B5                     u710:
   964  01B5                     l1097:
   965  01B5  0821               	movf	___awmod@divisor+1,w
   966  01B6  0223               	subwf	___awmod@dividend+1,w
   967  01B7  1D03               	skipz
   968  01B8  29BB               	goto	u725
   969  01B9  0820               	movf	___awmod@divisor,w
   970  01BA  0222               	subwf	___awmod@dividend,w
   971  01BB                     u725:
   972  01BB  1C03               	skipc
   973  01BC  29BE               	goto	u721
   974  01BD  29BF               	goto	u720
   975  01BE                     u721:
   976  01BE  29C5               	goto	l1101
   977  01BF                     u720:
   978  01BF                     l1099:
   979  01BF  0820               	movf	___awmod@divisor,w
   980  01C0  02A2               	subwf	___awmod@dividend,f
   981  01C1  0821               	movf	___awmod@divisor+1,w
   982  01C2  1C03               	skipc
   983  01C3  03A3               	decf	___awmod@dividend+1,f
   984  01C4  02A3               	subwf	___awmod@dividend+1,f
   985  01C5                     l1101:
   986  01C5  3001               	movlw	1
   987  01C6                     u735:
   988  01C6  1003               	clrc
   989  01C7  0CA1               	rrf	___awmod@divisor+1,f
   990  01C8  0CA0               	rrf	___awmod@divisor,f
   991  01C9  3EFF               	addlw	-1
   992  01CA  1D03               	skipz
   993  01CB  29C6               	goto	u735
   994  01CC                     l1103:
   995  01CC  3001               	movlw	1
   996  01CD  02A4               	subwf	___awmod@counter,f
   997  01CE  1D03               	btfss	3,2
   998  01CF  29D1               	goto	u741
   999  01D0  29D2               	goto	u740
  1000  01D1                     u741:
  1001  01D1  29B5               	goto	l1097
  1002  01D2                     u740:
  1003  01D2                     l1105:
  1004  01D2  0825               	movf	___awmod@sign,w
  1005  01D3  1903               	btfsc	3,2
  1006  01D4  29D6               	goto	u751
  1007  01D5  29D7               	goto	u750
  1008  01D6                     u751:
  1009  01D6  29DC               	goto	l1109
  1010  01D7                     u750:
  1011  01D7                     l1107:
  1012  01D7  09A2               	comf	___awmod@dividend,f
  1013  01D8  09A3               	comf	___awmod@dividend+1,f
  1014  01D9  0AA2               	incf	___awmod@dividend,f
  1015  01DA  1903               	skipnz
  1016  01DB  0AA3               	incf	___awmod@dividend+1,f
  1017  01DC                     l1109:
  1018  01DC  0823               	movf	___awmod@dividend+1,w
  1019  01DD  00A1               	movwf	?___awmod+1
  1020  01DE  0822               	movf	___awmod@dividend,w
  1021  01DF  00A0               	movwf	?___awmod
  1022  01E0                     l345:
  1023  01E0  0008               	return
  1024  01E1                     __end_of___awmod:
  1025                           
  1026                           	psect	text5
  1027  00C2                     __ptext5:	
  1028 ;; *************** function ___awdiv *****************
  1029 ;; Defined at:
  1030 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\awdiv.c"
  1031 ;; Parameters:    Size  Location     Type
  1032 ;;  divisor         2    0[BANK0 ] int 
  1033 ;;  dividend        2    2[BANK0 ] int 
  1034 ;; Auto vars:     Size  Location     Type
  1035 ;;  quotient        2    6[BANK0 ] int 
  1036 ;;  sign            1    5[BANK0 ] unsigned char 
  1037 ;;  counter         1    4[BANK0 ] unsigned char 
  1038 ;; Return value:  Size  Location     Type
  1039 ;;                  2    0[BANK0 ] int 
  1040 ;; Registers used:
  1041 ;;		wreg, status,2, status,0
  1042 ;; Tracked objects:
  1043 ;;		On entry : 0/0
  1044 ;;		On exit  : 0/0
  1045 ;;		Unchanged: 0/0
  1046 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1047 ;;      Params:         0       4       0       0       0
  1048 ;;      Locals:         0       4       0       0       0
  1049 ;;      Temps:          1       0       0       0       0
  1050 ;;      Totals:         1       8       0       0       0
  1051 ;;Total ram usage:        9 bytes
  1052 ;; Hardware stack levels used: 1
  1053 ;; Hardware stack levels required when called: 1
  1054 ;; This function calls:
  1055 ;;		Nothing
  1056 ;; This function is called by:
  1057 ;;		_digits
  1058 ;; This function uses a non-reentrant model
  1059 ;;
  1060                           
  1061  00C2                     ___awdiv:	
  1062                           ;psect for function ___awdiv
  1063                           
  1064  00C2                     l1031:	
  1065                           ;incstack = 0
  1066                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  1067                           
  1068  00C2  1283               	bcf	3,5	;RP0=0, select bank0
  1069  00C3  1303               	bcf	3,6	;RP1=0, select bank0
  1070  00C4  01A5               	clrf	___awdiv@sign
  1071  00C5                     l1033:
  1072  00C5  1FA1               	btfss	___awdiv@divisor+1,7
  1073  00C6  28C8               	goto	u571
  1074  00C7  28C9               	goto	u570
  1075  00C8                     u571:
  1076  00C8  28D0               	goto	l1039
  1077  00C9                     u570:
  1078  00C9                     l1035:
  1079  00C9  09A0               	comf	___awdiv@divisor,f
  1080  00CA  09A1               	comf	___awdiv@divisor+1,f
  1081  00CB  0AA0               	incf	___awdiv@divisor,f
  1082  00CC  1903               	skipnz
  1083  00CD  0AA1               	incf	___awdiv@divisor+1,f
  1084  00CE                     l1037:
  1085  00CE  01A5               	clrf	___awdiv@sign
  1086  00CF  0AA5               	incf	___awdiv@sign,f
  1087  00D0                     l1039:
  1088  00D0  1FA3               	btfss	___awdiv@dividend+1,7
  1089  00D1  28D3               	goto	u581
  1090  00D2  28D4               	goto	u580
  1091  00D3                     u581:
  1092  00D3  28DD               	goto	l1045
  1093  00D4                     u580:
  1094  00D4                     l1041:
  1095  00D4  09A2               	comf	___awdiv@dividend,f
  1096  00D5  09A3               	comf	___awdiv@dividend+1,f
  1097  00D6  0AA2               	incf	___awdiv@dividend,f
  1098  00D7  1903               	skipnz
  1099  00D8  0AA3               	incf	___awdiv@dividend+1,f
  1100  00D9                     l1043:
  1101  00D9  3001               	movlw	1
  1102  00DA  00F4               	movwf	??___awdiv
  1103  00DB  0874               	movf	??___awdiv,w
  1104  00DC  06A5               	xorwf	___awdiv@sign,f
  1105  00DD                     l1045:
  1106  00DD  01A6               	clrf	___awdiv@quotient
  1107  00DE  01A7               	clrf	___awdiv@quotient+1
  1108  00DF                     l1047:
  1109  00DF  0820               	movf	___awdiv@divisor,w
  1110  00E0  0421               	iorwf	___awdiv@divisor+1,w
  1111  00E1  1903               	btfsc	3,2
  1112  00E2  28E4               	goto	u591
  1113  00E3  28E5               	goto	u590
  1114  00E4                     u591:
  1115  00E4  291C               	goto	l1067
  1116  00E5                     u590:
  1117  00E5                     l1049:
  1118  00E5  01A4               	clrf	___awdiv@counter
  1119  00E6  0AA4               	incf	___awdiv@counter,f
  1120  00E7  28F3               	goto	l1055
  1121  00E8                     l1051:
  1122  00E8  3001               	movlw	1
  1123  00E9                     u605:
  1124  00E9  1003               	clrc
  1125  00EA  0DA0               	rlf	___awdiv@divisor,f
  1126  00EB  0DA1               	rlf	___awdiv@divisor+1,f
  1127  00EC  3EFF               	addlw	-1
  1128  00ED  1D03               	skipz
  1129  00EE  28E9               	goto	u605
  1130  00EF                     l1053:
  1131  00EF  3001               	movlw	1
  1132  00F0  00F4               	movwf	??___awdiv
  1133  00F1  0874               	movf	??___awdiv,w
  1134  00F2  07A4               	addwf	___awdiv@counter,f
  1135  00F3                     l1055:
  1136  00F3  1FA1               	btfss	___awdiv@divisor+1,7
  1137  00F4  28F6               	goto	u611
  1138  00F5  28F7               	goto	u610
  1139  00F6                     u611:
  1140  00F6  28E8               	goto	l1051
  1141  00F7                     u610:
  1142  00F7                     l1057:
  1143  00F7  3001               	movlw	1
  1144  00F8                     u625:
  1145  00F8  1003               	clrc
  1146  00F9  0DA6               	rlf	___awdiv@quotient,f
  1147  00FA  0DA7               	rlf	___awdiv@quotient+1,f
  1148  00FB  3EFF               	addlw	-1
  1149  00FC  1D03               	skipz
  1150  00FD  28F8               	goto	u625
  1151  00FE  0821               	movf	___awdiv@divisor+1,w
  1152  00FF  0223               	subwf	___awdiv@dividend+1,w
  1153  0100  1D03               	skipz
  1154  0101  2904               	goto	u635
  1155  0102  0820               	movf	___awdiv@divisor,w
  1156  0103  0222               	subwf	___awdiv@dividend,w
  1157  0104                     u635:
  1158  0104  1C03               	skipc
  1159  0105  2907               	goto	u631
  1160  0106  2908               	goto	u630
  1161  0107                     u631:
  1162  0107  290F               	goto	l1063
  1163  0108                     u630:
  1164  0108                     l1059:
  1165  0108  0820               	movf	___awdiv@divisor,w
  1166  0109  02A2               	subwf	___awdiv@dividend,f
  1167  010A  0821               	movf	___awdiv@divisor+1,w
  1168  010B  1C03               	skipc
  1169  010C  03A3               	decf	___awdiv@dividend+1,f
  1170  010D  02A3               	subwf	___awdiv@dividend+1,f
  1171  010E                     l1061:
  1172  010E  1426               	bsf	___awdiv@quotient,0
  1173  010F                     l1063:
  1174  010F  3001               	movlw	1
  1175  0110                     u645:
  1176  0110  1003               	clrc
  1177  0111  0CA1               	rrf	___awdiv@divisor+1,f
  1178  0112  0CA0               	rrf	___awdiv@divisor,f
  1179  0113  3EFF               	addlw	-1
  1180  0114  1D03               	skipz
  1181  0115  2910               	goto	u645
  1182  0116                     l1065:
  1183  0116  3001               	movlw	1
  1184  0117  02A4               	subwf	___awdiv@counter,f
  1185  0118  1D03               	btfss	3,2
  1186  0119  291B               	goto	u651
  1187  011A  291C               	goto	u650
  1188  011B                     u651:
  1189  011B  28F7               	goto	l1057
  1190  011C                     u650:
  1191  011C                     l1067:
  1192  011C  0825               	movf	___awdiv@sign,w
  1193  011D  1903               	btfsc	3,2
  1194  011E  2920               	goto	u661
  1195  011F  2921               	goto	u660
  1196  0120                     u661:
  1197  0120  2926               	goto	l1071
  1198  0121                     u660:
  1199  0121                     l1069:
  1200  0121  09A6               	comf	___awdiv@quotient,f
  1201  0122  09A7               	comf	___awdiv@quotient+1,f
  1202  0123  0AA6               	incf	___awdiv@quotient,f
  1203  0124  1903               	skipnz
  1204  0125  0AA7               	incf	___awdiv@quotient+1,f
  1205  0126                     l1071:
  1206  0126  0827               	movf	___awdiv@quotient+1,w
  1207  0127  00A1               	movwf	?___awdiv+1
  1208  0128  0826               	movf	___awdiv@quotient,w
  1209  0129  00A0               	movwf	?___awdiv
  1210  012A                     l332:
  1211  012A  0008               	return
  1212  012B                     __end_of___awdiv:
  1213                           
  1214                           	psect	text6
  1215  003E                     __ptext6:	
  1216 ;; *************** function _isr *****************
  1217 ;; Defined at:
  1218 ;;		line 126 in file "lab07_main-20168.c"
  1219 ;; Parameters:    Size  Location     Type
  1220 ;;		None
  1221 ;; Auto vars:     Size  Location     Type
  1222 ;;		None
  1223 ;; Return value:  Size  Location     Type
  1224 ;;                  1    wreg      void 
  1225 ;; Registers used:
  1226 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  1227 ;; Tracked objects:
  1228 ;;		On entry : 0/0
  1229 ;;		On exit  : 0/0
  1230 ;;		Unchanged: 0/0
  1231 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1232 ;;      Params:         0       0       0       0       0
  1233 ;;      Locals:         0       0       0       0       0
  1234 ;;      Temps:          4       0       0       0       0
  1235 ;;      Totals:         4       0       0       0       0
  1236 ;;Total ram usage:        4 bytes
  1237 ;; Hardware stack levels used: 1
  1238 ;; This function calls:
  1239 ;;		Nothing
  1240 ;; This function is called by:
  1241 ;;		Interrupt level 1
  1242 ;; This function uses a non-reentrant model
  1243 ;;
  1244                           
  1245  003E                     _isr:	
  1246                           ;psect for function _isr
  1247                           
  1248  003E                     i1l961:
  1249                           
  1250                           ;lab07_main-20168.c: 128:     if(INTCONbits.RBIF){
  1251  003E  1C0B               	btfss	11,0	;volatile
  1252  003F  2841               	goto	u48_21
  1253  0040  2842               	goto	u48_20
  1254  0041                     u48_21:
  1255  0041  2877               	goto	i1l72
  1256  0042                     u48_20:
  1257  0042                     i1l963:
  1258                           
  1259                           ;lab07_main-20168.c: 129:         A = 1;
  1260  0042  01F8               	clrf	_A
  1261  0043  0AF8               	incf	_A,f
  1262                           
  1263                           ;lab07_main-20168.c: 130:         C = 1;
  1264  0044  01F6               	clrf	_C
  1265  0045  0AF6               	incf	_C,f
  1266                           
  1267                           ;lab07_main-20168.c: 131:         if (!PORTBbits.RB0){
  1268  0046  1283               	bcf	3,5	;RP0=0, select bank0
  1269  0047  1303               	bcf	3,6	;RP1=0, select bank0
  1270  0048  1806               	btfsc	6,0	;volatile
  1271  0049  284B               	goto	u49_21
  1272  004A  284C               	goto	u49_20
  1273  004B                     u49_21:
  1274  004B  2851               	goto	i1l969
  1275  004C                     u49_20:
  1276  004C                     i1l965:
  1277                           
  1278                           ;lab07_main-20168.c: 132:             A = 0;
  1279  004C  01F8               	clrf	_A
  1280  004D                     i1l967:
  1281                           
  1282                           ;lab07_main-20168.c: 133:             B = A;
  1283  004D  0878               	movf	_A,w
  1284  004E  00F0               	movwf	??_isr
  1285  004F  0870               	movf	??_isr,w
  1286  0050  00F7               	movwf	_B
  1287  0051                     i1l969:
  1288                           
  1289                           ;lab07_main-20168.c: 135:         if (B != A){
  1290  0051  0877               	movf	_B,w
  1291  0052  0678               	xorwf	_A,w
  1292  0053  1903               	skipnz
  1293  0054  2856               	goto	u50_21
  1294  0055  2857               	goto	u50_20
  1295  0056                     u50_21:
  1296  0056  2860               	goto	i1l74
  1297  0057                     u50_20:
  1298  0057                     i1l971:
  1299                           
  1300                           ;lab07_main-20168.c: 136:             B = A;
  1301  0057  0878               	movf	_A,w
  1302  0058  00F0               	movwf	??_isr
  1303  0059  0870               	movf	??_isr,w
  1304  005A  00F7               	movwf	_B
  1305  005B                     i1l973:
  1306                           
  1307                           ;lab07_main-20168.c: 137:             contador1++;
  1308  005B  3001               	movlw	1
  1309  005C  00F0               	movwf	??_isr
  1310  005D  0870               	movf	??_isr,w
  1311  005E  07F9               	addwf	_contador1,f
  1312                           
  1313                           ;lab07_main-20168.c: 138:         }
  1314  005F  2869               	goto	i1l979
  1315  0060                     i1l74:	
  1316                           ;lab07_main-20168.c: 139:         else if(!PORTBbits.RB1){
  1317                           
  1318  0060  1886               	btfsc	6,1	;volatile
  1319  0061  2863               	goto	u51_21
  1320  0062  2864               	goto	u51_20
  1321  0063                     u51_21:
  1322  0063  2869               	goto	i1l979
  1323  0064                     u51_20:
  1324  0064                     i1l975:
  1325                           
  1326                           ;lab07_main-20168.c: 140:             C = 0;
  1327  0064  01F6               	clrf	_C
  1328  0065                     i1l977:
  1329                           
  1330                           ;lab07_main-20168.c: 141:             D = C;
  1331  0065  0876               	movf	_C,w
  1332  0066  00F0               	movwf	??_isr
  1333  0067  0870               	movf	??_isr,w
  1334  0068  00F5               	movwf	_D
  1335  0069                     i1l979:
  1336                           
  1337                           ;lab07_main-20168.c: 143:         if (D != C){
  1338  0069  0875               	movf	_D,w
  1339  006A  0676               	xorwf	_C,w
  1340  006B  1903               	skipnz
  1341  006C  286E               	goto	u52_21
  1342  006D  286F               	goto	u52_20
  1343  006E                     u52_21:
  1344  006E  2875               	goto	i1l985
  1345  006F                     u52_20:
  1346  006F                     i1l981:
  1347                           
  1348                           ;lab07_main-20168.c: 144:             D = C;
  1349  006F  0876               	movf	_C,w
  1350  0070  00F0               	movwf	??_isr
  1351  0071  0870               	movf	??_isr,w
  1352  0072  00F5               	movwf	_D
  1353  0073                     i1l983:
  1354                           
  1355                           ;lab07_main-20168.c: 145:             contador1--;
  1356  0073  3001               	movlw	1
  1357  0074  02F9               	subwf	_contador1,f
  1358  0075                     i1l985:
  1359                           
  1360                           ;lab07_main-20168.c: 147:         INTCONbits.RBIF = 0;
  1361  0075  100B               	bcf	11,0	;volatile
  1362                           
  1363                           ;lab07_main-20168.c: 148:     }
  1364  0076  28B9               	goto	i1l85
  1365  0077                     i1l72:	
  1366                           ;lab07_main-20168.c: 150:     else if(T0IF){
  1367                           
  1368  0077  1D0B               	btfss	11,2	;volatile
  1369  0078  287A               	goto	u53_21
  1370  0079  287B               	goto	u53_20
  1371  007A                     u53_21:
  1372  007A  28B9               	goto	i1l85
  1373  007B                     u53_20:
  1374  007B                     i1l987:
  1375                           
  1376                           ;lab07_main-20168.c: 151:         INTCONbits.T0IF = 0;
  1377  007B  110B               	bcf	11,2	;volatile
  1378  007C                     i1l989:
  1379                           
  1380                           ;lab07_main-20168.c: 152:         TMR0 = 248;
  1381  007C  30F8               	movlw	248
  1382  007D  1283               	bcf	3,5	;RP0=0, select bank0
  1383  007E  1303               	bcf	3,6	;RP1=0, select bank0
  1384  007F  0081               	movwf	1	;volatile
  1385  0080                     i1l991:
  1386                           
  1387                           ;lab07_main-20168.c: 153:         PORTD = 0;
  1388  0080  0188               	clrf	8	;volatile
  1389  0081                     i1l993:
  1390                           
  1391                           ;lab07_main-20168.c: 154:         if (disp_flag == 0){
  1392  0081  083C               	movf	_disp_flag,w
  1393  0082  043D               	iorwf	_disp_flag+1,w
  1394  0083  1D03               	btfss	3,2
  1395  0084  2886               	goto	u54_21
  1396  0085  2887               	goto	u54_20
  1397  0086                     u54_21:
  1398  0086  2894               	goto	i1l1003
  1399  0087                     u54_20:
  1400  0087                     i1l995:
  1401                           
  1402                           ;lab07_main-20168.c: 155:             PORTC = (index[ones]);
  1403  0087  0835               	movf	_ones,w
  1404  0088  3E2B               	addlw	(low (_index| 0))& (0+255)
  1405  0089  0084               	movwf	4
  1406  008A  1383               	bcf	3,7	;select IRP bank0
  1407  008B  0800               	movf	0,w
  1408  008C  0087               	movwf	7	;volatile
  1409  008D                     i1l997:
  1410                           
  1411                           ;lab07_main-20168.c: 156:             PORTDbits.RD0 = 0;
  1412  008D  1008               	bcf	8,0	;volatile
  1413  008E                     i1l999:
  1414                           
  1415                           ;lab07_main-20168.c: 157:             PORTDbits.RD2 = 1;
  1416  008E  1508               	bsf	8,2	;volatile
  1417  008F                     i1l1001:
  1418                           
  1419                           ;lab07_main-20168.c: 158:             disp_flag = 1;
  1420  008F  3001               	movlw	1
  1421  0090  00BC               	movwf	_disp_flag
  1422  0091  3000               	movlw	0
  1423  0092  00BD               	movwf	_disp_flag+1
  1424                           
  1425                           ;lab07_main-20168.c: 159:         }
  1426  0093  28B9               	goto	i1l85
  1427  0094                     i1l1003:
  1428  0094  033C               	decf	_disp_flag,w
  1429  0095  043D               	iorwf	_disp_flag+1,w
  1430  0096  1D03               	btfss	3,2
  1431  0097  2899               	goto	u55_21
  1432  0098  289A               	goto	u55_20
  1433  0099                     u55_21:
  1434  0099  28A7               	goto	i1l1013
  1435  009A                     u55_20:
  1436  009A                     i1l1005:
  1437                           
  1438                           ;lab07_main-20168.c: 161:             PORTC = (index[tens]);
  1439  009A  0837               	movf	_tens,w
  1440  009B  3E2B               	addlw	(low (_index| 0))& (0+255)
  1441  009C  0084               	movwf	4
  1442  009D  1383               	bcf	3,7	;select IRP bank0
  1443  009E  0800               	movf	0,w
  1444  009F  0087               	movwf	7	;volatile
  1445  00A0                     i1l1007:
  1446                           
  1447                           ;lab07_main-20168.c: 162:             PORTDbits.RD2 = 0;
  1448  00A0  1108               	bcf	8,2	;volatile
  1449  00A1                     i1l1009:
  1450                           
  1451                           ;lab07_main-20168.c: 163:             PORTDbits.RD1 = 1;
  1452  00A1  1488               	bsf	8,1	;volatile
  1453  00A2                     i1l1011:
  1454                           
  1455                           ;lab07_main-20168.c: 164:             disp_flag = 2;
  1456  00A2  3002               	movlw	2
  1457  00A3  00BC               	movwf	_disp_flag
  1458  00A4  3000               	movlw	0
  1459  00A5  00BD               	movwf	_disp_flag+1
  1460                           
  1461                           ;lab07_main-20168.c: 165:         }
  1462  00A6  28B9               	goto	i1l85
  1463  00A7                     i1l1013:
  1464  00A7  3002               	movlw	2
  1465  00A8  063C               	xorwf	_disp_flag,w
  1466  00A9  043D               	iorwf	_disp_flag+1,w
  1467  00AA  1D03               	btfss	3,2
  1468  00AB  28AD               	goto	u56_21
  1469  00AC  28AE               	goto	u56_20
  1470  00AD                     u56_21:
  1471  00AD  28B9               	goto	i1l79
  1472  00AE                     u56_20:
  1473  00AE                     i1l1015:
  1474                           
  1475                           ;lab07_main-20168.c: 167:             PORTC = (index[huns]);
  1476  00AE  0839               	movf	_huns,w
  1477  00AF  3E2B               	addlw	(low (_index| 0))& (0+255)
  1478  00B0  0084               	movwf	4
  1479  00B1  1383               	bcf	3,7	;select IRP bank0
  1480  00B2  0800               	movf	0,w
  1481  00B3  0087               	movwf	7	;volatile
  1482  00B4                     i1l1017:
  1483                           
  1484                           ;lab07_main-20168.c: 168:             PORTDbits.RD1 = 0;
  1485  00B4  1088               	bcf	8,1	;volatile
  1486  00B5                     i1l1019:
  1487                           
  1488                           ;lab07_main-20168.c: 169:             PORTDbits.RD0 = 1;
  1489  00B5  1408               	bsf	8,0	;volatile
  1490  00B6                     i1l1021:
  1491                           
  1492                           ;lab07_main-20168.c: 170:             disp_flag = 0;
  1493  00B6  01BC               	clrf	_disp_flag
  1494  00B7  01BD               	clrf	_disp_flag+1
  1495  00B8  28B9               	goto	i1l85
  1496  00B9                     i1l79:	
  1497                           ;lab07_main-20168.c: 173:     }
  1498                           
  1499  00B9                     i1l85:
  1500  00B9  0873               	movf	??_isr+3,w
  1501  00BA  008A               	movwf	10
  1502  00BB  0872               	movf	??_isr+2,w
  1503  00BC  0084               	movwf	4
  1504  00BD  0E71               	swapf	??_isr+1,w
  1505  00BE  0083               	movwf	3
  1506  00BF  0EFE               	swapf	btemp,f
  1507  00C0  0E7E               	swapf	btemp,w
  1508  00C1  0009               	retfie
  1509  00C2                     __end_of_isr:
  1510  007E                     btemp	set	126	;btemp
  1511  007E                     wtemp0	set	126
  1512                           
  1513                           	psect	intentry
  1514  0004                     __pintentry:	
  1515                           ;incstack = 0
  1516                           ; Regs used in _isr: [wreg-fsr0h+status,2+status,0]
  1517                           
  1518  0004                     interrupt_function:
  1519  007E                     saved_w	set	btemp
  1520  0004  00FE               	movwf	btemp
  1521  0005  0E03               	swapf	3,w
  1522  0006  00F1               	movwf	??_isr+1
  1523  0007  0804               	movf	4,w
  1524  0008  00F2               	movwf	??_isr+2
  1525  0009  080A               	movf	10,w
  1526  000A  00F3               	movwf	??_isr+3
  1527  000B  120A  118A  283E   	ljmp	_isr
  1528                           
  1529                           	psect	idloc
  1530                           
  1531                           ;Config register IDLOC0 @ 0x2000
  1532                           ;	unspecified, using default values
  1533  2000                     	org	8192
  1534  2000  3FFF               	dw	16383
  1535                           
  1536                           ;Config register IDLOC1 @ 0x2001
  1537                           ;	unspecified, using default values
  1538  2001                     	org	8193
  1539  2001  3FFF               	dw	16383
  1540                           
  1541                           ;Config register IDLOC2 @ 0x2002
  1542                           ;	unspecified, using default values
  1543  2002                     	org	8194
  1544  2002  3FFF               	dw	16383
  1545                           
  1546                           ;Config register IDLOC3 @ 0x2003
  1547                           ;	unspecified, using default values
  1548  2003                     	org	8195
  1549  2003  3FFF               	dw	16383
  1550                           
  1551                           	psect	config
  1552                           
  1553                           ;Config register CONFIG1 @ 0x2007
  1554                           ;	Oscillator Selection bits
  1555                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  1556                           ;	Watchdog Timer Enable bit
  1557                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  1558                           ;	Power-up Timer Enable bit
  1559                           ;	PWRTE = OFF, PWRT disabled
  1560                           ;	RE3/MCLR pin function select bit
  1561                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  1562                           ;	Code Protection bit
  1563                           ;	CP = OFF, Program memory code protection is disabled
  1564                           ;	Data Code Protection bit
  1565                           ;	CPD = OFF, Data memory code protection is disabled
  1566                           ;	Brown Out Reset Selection bits
  1567                           ;	BOREN = OFF, BOR disabled
  1568                           ;	Internal External Switchover bit
  1569                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  1570                           ;	Fail-Safe Clock Monitor Enabled bit
  1571                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  1572                           ;	Low Voltage Programming Enable bit
  1573                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  1574                           ;	In-Circuit Debugger Mode bit
  1575                           ;	DEBUG = 0x1, unprogrammed default
  1576  2007                     	org	8199
  1577  2007  20D4               	dw	8404
  1578                           
  1579                           ;Config register CONFIG2 @ 0x2008
  1580                           ;	Brown-out Reset Selection bit
  1581                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  1582                           ;	Flash Program Memory Self Write Enable bits
  1583                           ;	WRT = OFF, Write protection off
  1584  2008                     	org	8200
  1585  2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        14
    BSS         3
    Persistent  7
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      5      10
    BANK0            80     11      30
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _digits->___awdiv
    _digits->___awmod

Critical Paths under _isr in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_digits
    _digits->___awdiv

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    1598
                             _digits
                              _setup
                         _tmr0_setup
 ---------------------------------------------------------------------------------
 (1) _tmr0_setup                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _digits                                               3     3      0    1598
                                              8 BANK0      3     3      0
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              7     3      4     793
                                              4 COMMON     1     1      0
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              9     5      4     805
                                              4 COMMON     1     1      0
                                              0 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _isr                                                  4     4      0       0
                                              0 COMMON     4     4      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _digits
     ___awdiv
     ___awmod
   _setup
   _tmr0_setup

 _isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50      B      1E       5       37.5%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      5       A       1       71.4%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      28      12        0.0%
ABS                  0      0      28       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.35 build 20211206165544 
Symbol Table                                                                                   Sat Apr 09 16:36:17 2022

                      _A 0078                        _B 0077                        _C 0076  
                      _D 0075                        pc 0002                       l61 020A  
                     l64 0241                       l67 0185             ___awdiv@sign 0025  
                     fsr 0004                      l332 012A                      l345 01E0  
                    l801 023D                      l771 01FA                      l781 01FF  
                    l773 01FB                      l791 0204                      l783 0200  
                    l775 01FC                      l767 01E1                      l793 0205  
                    l785 0201                      l777 01FD                      l769 01F7  
                    l795 0209                      l787 0202                      l779 01FE  
                    l789 0203                      l799 0235                      u610 00F7  
                    u611 00F6                      u605 00E9                      u630 0108  
                    u710 01B5                      u631 0107                      u711 01B4  
                    u720 01BF                      u625 00F8                      u721 01BE  
                    u705 01A7                      u650 011C                      u570 00C9  
                    u651 011B                      u635 0104                      u571 00C8  
                    u660 0121                      u580 00D4                      u740 01D2  
                    u661 0120                      u645 0110                      u581 00D3  
                    u741 01D1                      u725 01BB                      u590 00E5  
                    u750 01D7                      u670 018D                      u591 00E4  
                    u751 01D6                      u735 01C6                      u671 018C  
                    u680 0198                      u681 0197                      u690 01A3  
                    u691 01A2                      _mod 003B                      _isr 003E  
                    fsr0 0004                      indf 0000             ___awmod@sign 0025  
                   l1101 01C5                     l1031 00C2                     l1103 01CC  
                   l1041 00D4                     l1033 00C5                     l1105 01D2  
                   l1113 012B                     l1051 00E8                     l1043 00D9  
                   l1035 00C9                     l1107 01D7                     l1115 020B  
                   l1061 010E                     l1053 00EF                     l1045 00DD  
                   l1037 00CE                     l1109 01DC                     l1117 0215  
                   l1071 0126                     l1063 010F                     l1055 00F3  
                   l1047 00DF                     l1039 00D0                     l1119 0219  
                   l1065 0116                     l1057 00F7                     l1049 00E5  
                   l1081 0192                     l1059 0108                     l1067 011C  
                   l1091 01A6                     l1083 0194                     l1075 0186  
                   l1069 0121                     l1093 01AD                     l1085 0198  
                   l1077 0189                     l1095 01B1                     l1087 019D  
                   l1079 018D                     l1097 01B5                     l1089 01A3  
                   l1099 01BF                     ?_isr 0070                     _T0IF 005A  
                   i1l72 0077                     i1l74 0060                     i1l85 00B9  
                   i1l79 00B9                     _TMR0 0001                     _main 020B  
                   _huns 0039                     _ones 0035                     _tens 0037  
                   btemp 007E                     start 000E                    ??_isr 0070  
                  ?_main 0070          __end_of___awdiv 012B          __end_of___awmod 01E1  
                  _ANSEL 0188          ___awdiv@divisor 0020                    i1l961 003E  
                  i1l971 0057                    i1l963 0042                    i1l981 006F  
                  i1l973 005B                    i1l965 004C                    i1l991 0080  
                  i1l983 0073                    i1l975 0064                    i1l967 004D  
                  i1l993 0081                    i1l985 0075                    i1l977 0065  
                  i1l969 0051                    i1l995 0087                    i1l987 007B  
                  i1l979 0069                    i1l997 008D                    i1l989 007C  
                  i1l999 008E          ___awdiv@counter 0024                    u50_20 0057  
                  u50_21 0056                    u51_20 0064                    u51_21 0063  
                  _PORTA 0005                    _PORTC 0007                    _PORTD 0008  
                  u52_20 006F                    u52_21 006E                    u53_20 007B  
                  u53_21 007A                    u54_20 0087                    u54_21 0086  
                  u55_20 009A                    u55_21 0099                    u56_20 00AE  
                  u48_20 0042                    u56_21 00AD                    u48_21 0041  
                  u49_20 004C                    u49_21 004B                    _TRISA 0085  
                  _TRISC 0087                    _TRISD 0088                    _index 002B  
                  _setup 01E1                    pclath 000A                    status 0003  
                  wtemp0 007E          __initialization 0011             __end_of_main 0222  
                 ??_main 0075         ___awdiv@dividend 0022                   ?_setup 0070  
                 _ANSELH 0189                   i1l1001 008F                   i1l1011 00A2  
                 i1l1003 0094                   i1l1021 00B6                   i1l1005 009A  
                 i1l1013 00A7                   i1l1015 00AE                   i1l1007 00A0  
                 i1l1017 00B4                   i1l1009 00A1                   i1l1019 00B5  
              ??___awdiv 0074                ??___awmod 0074                   _digits 012B  
       ___awdiv@quotient 0026          ___awmod@divisor 0020          ___awmod@counter 0024  
           __pdataCOMMON 0075                   saved_w 007E  __end_of__initialization 003A  
         __pcstackCOMMON 0070             __pidataBANK0 0242            __end_of_setup 020B  
         _OPTION_REGbits 0081                  ??_setup 0074               __pbssBANK0 003C  
             __pmaintext 020B               __pintentry 0004                  ?_digits 0070  
                ___awdiv 00C2                  ___awmod 0186                  __ptext1 0235  
                __ptext2 01E1                  __ptext3 012B                  __ptext4 0186  
                __ptext5 00C2                  __ptext6 003E         ___awmod@dividend 0022  
   end_of_initialization 003A               _tmr0_setup 0235                _PORTBbits 0006  
              _PORTDbits 0008                _TRISBbits 0086            __pidataCOMMON 024C  
         __end_of_digits 0186      start_initialization 0011              __end_of_isr 00C2  
            ?_tmr0_setup 0070               init_fetch0 0222                 ??_digits 0028  
            __pdataBANK0 002B              __pbssCOMMON 0079                ___latbits 0002  
          __pcstackBANK0 0020                __pnvBANK0 0035                 ?___awdiv 0020  
               ?___awmod 0020                _disp_flag 003C                _contador1 0079  
      interrupt_function 0004                 _IOCBbits 0096                 _WPUBbits 0095  
           ??_tmr0_setup 0074       __end_of_tmr0_setup 0242               _INTCONbits 000B  
               init_ram0 0226                 intlevel1 0000               _OSCCONbits 008F  
